



HackerRank_Practice_set/Bubble_Sort.java
@@ -0,0 +1,36 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class Bubble_Sort
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int[] arr = new int[N];

        for (int i =0;i<arr.length;i++)
        {
            arr[i] = sc.nextInt();
        }

        for (int i = 0; i<arr.length;i++)
        {
            for (int j =0;j<arr.length-1-i;j++)
            {
                if (arr[j]>arr[j+1])
                {
                    int temp = arr[j+1];
                    arr[j+1] = arr[j];
                    arr[j] = temp;
                }
            }
        }
        for (int x : arr)
            System.out.print(x + " ");


    }
}
 31  
HackerRank_Practice_set/Check_if_array_is_sorted.java
@@ -0,0 +1,31 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class Check_if_array_is_sorted
{
    static String check(int[] Arr)
    {
        for (int i=0; i<Arr.length-1;i++)
        {
            if (Arr[i]>Arr[i+1])
            {
                return "No";
            }
        }
        return "Yes";
    }
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] Arr = new int[N];

        for (int i =0; i<Arr.length;i++)
        {
            Arr[i] = sc.nextInt();
        }
        System.out.println(check(Arr));
        sc.close();
    }
}
 34  
HackerRank_Practice_set/Continuous_Sum_of_array.java
@@ -0,0 +1,34 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class Continuous_Sum_of_array
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[] arr1 = new int[N];
        int[] arr2 = new int[N];

        for (int i = 0; i<arr1.length;i++)
        {
            arr1[i] = sc.nextInt();
        }
        for (int i = 0; i<arr1.length;i++)
        {
            int sum =0;
            for (int j = 0; j<i+1;j++)
            {
                sum += arr1[j];
            }
            arr2[i] = sum;
        }
        for (int x : arr2)
            System.out.print(x + " ");



    }
}
 27  
HackerRank_Practice_set/Count_Even_Array.java
@@ -0,0 +1,27 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class Count_Even_Array
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();

        int[] arr = new int[n];
        for (int i = 0;i<arr.length;i++)
        {
            arr[i] = sc.nextInt();
        }
        int count =0;

        for (int x : arr)
        {
            if (x%2==0)
                ++count;
        }
        System.out.println(count);
    }
}
 27  
HackerRank_Practice_set/Count_IndexValue_Element.java
@@ -0,0 +1,27 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class Count_IndexValue_Element
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[] arr = new int[n];

        for (int i =0; i<arr.length;i++)
        {
            arr[i] = sc.nextInt();
        }
        int count = 0;

        for (int i =0; i<arr.length;i++)
        {
            if (i == arr[i])
                ++count;
        }
        System.out.println(count);
    }
}
 31  
HackerRank_Practice_set/Diff_Max_Min.java
@@ -0,0 +1,31 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class Diff_Max_Min
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[] arr = new int[N];

        for (int i =0; i<arr.length;i++)
        {
            arr[i] = sc.nextInt();
        }

        int max = Integer.MIN_VALUE;
        int min = Integer.MAX_VALUE;
        for (int i =0; i<arr.length;i++)
        {
            if (arr[i] > max)
                max = arr[i];
            if (arr[i] < min)
                min = arr[i];
        }
        System.out.println(max-min);

    }
}
 40  
HackerRank_Practice_set/First_and_Last.java
@@ -0,0 +1,40 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class First_and_Last
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int[] arr = new int[N];
        for (int i = 0; i<arr.length;i++)
        {
            arr[i] = sc.nextInt();
        }
        int check = sc.nextInt();
        int first = 0;
        int last =0;
        for (int i = 0; i<arr.length;i++)
        {
            if (check == arr[i])
            {
                first = i;
                break;
            }

        }
        for (int i =0; i<arr.length;i++)
        {
            if (check == arr[i])
            {
                last = i;
            }
        }
        System.out.println(first);
        System.out.println(last);

    }
}
 30  
HackerRank_Practice_set/Lucky_Pairs.java
@@ -0,0 +1,30 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class Lucky_Pairs
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[] arr = new int[N];

        int count =0;
        for (int i =0; i<arr.length;i++)
            arr[i] = sc.nextInt();
        for (int i =0; i<arr.length;i++)
        {
            for (int j =0; j<arr.length;j++)
            {
                if (arr[i] == arr[j] && i<j)
                    ++count;
            }
        }
        System.out.println(count);


    }

}
 45  
HackerRank_Practice_set/Milk_and_Water.java
@@ -0,0 +1,45 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class Milk_and_Water
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();

        int[] arr1 = new int[N];

        for (int i = 0; i<arr1.length;i++)
        {
            arr1[i] = sc.nextInt();
        }

        for (int i = 0; i<arr1.length;i++)
        {
            for (int j =1; j<arr1.length;j++)
            {
                if (0<arr1[j])
                {
                    int temp = arr1[j];
                    arr1[j] = arr1[j-1];
                    arr1[j-1] = temp;
                }

//                if (0<arr1[j])
//                {
//                    int temp = arr1[j];
//                    arr1[j] = arr1[j+1];
//                    arr1[j+1] = temp;
//                }

            }
        }
        for (int x : arr1)
            System.out.print(x + " ");


    }
}
 21  
HackerRank_Practice_set/Number_of_Digits.java
@@ -0,0 +1,21 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class Number_of_Digits
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int count = 0;
        while(0<N)
        {
            N = N/10;
            ++count;
        }
        System.out.print(count);

    }
}
 28  
HackerRank_Practice_set/Peak_Elements.java
@@ -0,0 +1,28 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class Peak_Elements
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();

        int[] arr = new int[N];

        for (int i =0;i<arr.length;i++)
        {
            arr[i] = sc.nextInt();
        }
        for (int i = 1; i<arr.length-1;i++)
        {
            if (arr[i-1]<arr[i] && arr[i]>arr[i+1])
            {
                System.out.print(arr[i] + " ");
            }
        }

    }
}
 25  
HackerRank_Practice_set/Print_Alternate.java
@@ -0,0 +1,25 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class Print_Alternate
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();

        int[] arr = new int[n];

        for (int i =0; i<arr.length;i++)
        {
            arr[i] = sc.nextInt();
        }
        for (int i =0; i<arr.length;i=i+2)
        {
            System.out.println(arr[i]);
        }

    }
}
 24  
HackerRank_Practice_set/Print_Reverse_Alternate.java
@@ -0,0 +1,24 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class Print_Reverse_Alternate
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[] arr = new int[n];

        for (int i =0; i<arr.length;i++)
        {
            arr[i] = sc.nextInt();
        }
        for (int i =arr.length-1; i>=0;i=i-2)
        {
            System.out.println(arr[i]);
        }

    }
}
 25  
HackerRank_Practice_set/Reverse_Array.java
@@ -0,0 +1,25 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class Reverse_Array
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[] arr = new int[n];

        for (int i =0; i<arr.length;i++)
        {
            arr[i] = sc.nextInt();
        }

        for (int i = arr.length-1; i>=0; i--)
        {
            System.out.println(arr[i]);
        }

    }
}
 22  
HackerRank_Practice_set/Reverse_a_Number.java
@@ -0,0 +1,22 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class Reverse_a_Number
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int reverse = 0;
        while(0<N)
        {
            int last = N%10;
            reverse = (reverse*10)+last;
            N=N/10;
        }

        System.out.println(reverse);

    }
}
 34  
HackerRank_Practice_set/Search_Element.java
@@ -0,0 +1,34 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class Search_Element
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i =0; i<arr.length;i++)
        {
            arr[i] = sc.nextInt();
        }
        int x = sc.nextInt();
        int result =0;
        for (int i = 0; i<arr.length;i++)
        {
            if (x == arr[i])
            {
                result = i;
                break;
            }
            else
            {
                result = -1;
            }
        }
        System.out.println(result);

    }
}
 38  
HackerRank_Practice_set/Selection_Sort.java
@@ -0,0 +1,38 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class Selection_Sort
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();

        int[] arr = new int[N];
        for (int i =0; i<arr.length;i++)
        {
            arr[i] = sc.nextInt();
        }

        for (int i =0; i<arr.length;i++)
        {
            for (int j =i+1;j<arr.length;j++)
            {
                if (arr[i] > arr[j])
                {
                    int temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                }
            }
        }
        for (int x : arr)
        {
            System.out.print(x + " ");
        }


    }
}
 25  
HackerRank_Practice_set/print_Array.java
@@ -0,0 +1,25 @@
package HackerRank_Practice_set;

import java.util.Scanner;

public class print_Array
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] arr = new int[n];

        for (int i = 0; i<arr.length; i++)
        {
            arr[i] = sc.nextInt();
        }
        for (int i =0; i<arr.length;i++)
        {
            System.out.println(arr[i]);
        }


    }
}
